# This is Git's per-user configuration file.
[user]
	name = Samantha Cohen
	email = samantha.cohen@ovo.com
[alias]
	s = status
	b = branch
	pu = pull upstream
	pl = pull --rebase
	rum = remote update
	p = push
	please = push --force-with-lease
	c = !git add -A && git commit
	cm = !git add -A && git commit -m
	g = !git gui
	co = checkout
	ecg = !git config --global -e
	ec = config -e
	cob = checkout -b
	save = !git add -A && git commit -m 'SAVEPOINT'
	undo = reset HEAD~1 --mixed
	amend = !git add -A && git commit -a --amend
	wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
	bclean = "!f() { git rev-parse --abbrev-ref HEAD | xargs git branch --merged | grep -v `git rev-parse --abbrev-ref HEAD` | xargs git branch -d; }; f"
	l = "!f() { git --no-pager log -${1-5}; }; f"
	r = rebase
	pseto = "!f() { git rev-parse --abbrev-ref HEAD | xargs git push --set-upstream origin; }; f"
	lol = "!f() { git --no-pager log --pretty=tformat:'%Cred%h%Creset %Cgreen(%cr)%Creset %s  %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --graph -${1-10}; }; f"
	lolmain = "!f() { git --no-pager log --pretty=tformat:'%Cred%h%Creset %Cgreen(%cr)%Creset %s  %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --graph -${1-10}; ...main }; f"
	loltrunk = "!f() { git --no-pager log --pretty=tformat:'%Cred%h%Creset %Cgreen(%cr)%Creset %s  %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative --graph -${1-10}; ...trunk }; f"
	mpr = "!f() { git checkout ${2-main} && git remote update && git pull upstream ${2-main} && git fetch upstream pull/$1/head:pr-$1 && git merge --no-ff --no-commit pr-$1 && git branch -D pr-$1; }; f"
	reset-to = "!f() { git checkout ${2-main} && git remote update && git pull ${1-origin} ${2-main} && git bclean && git gc; }; f"
	rto = !git reset-to
	rtt = !git reset-to origin trunk
	careclean = clean -dfx -e "*ncrunchsolution*" -e "*DotSettings*" -e "**/*.ncrunchproject" -e "**/*.csproj.user"
[push]
	default = simple
[gc]
	auto = 0
[diff]
	tool = bc3
[init]
	defaultBranch = main
[core]
	editor = vim
[pull]
	rebase = true
[commit]
    template = ~/.git-commit-template
[help]
    autocorrect = 1
[pager]
    branch = false
    diff = true
